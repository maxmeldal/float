# Expose env properties starting with info at /actuator/info
management.info.env.enabled=true
info.artifact=@project.artifactId@
info.version=@project.version@
info.build-time=@maven.build.timestamp@

# Consider moving the management endpoint (/actuator) to an internal port:
management.server.port=8080

# Application health check and info
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.endpoints.web.exposure.include=health, metrics, info

# PRODUCTION URL
datasource.jdbcUrl=${POSTGRES_URL:jdbc:postgresql://floatdb2.postgres.database.azure.com:5432/postgres}
datasource.username=${POSTGRES_USERNAME:float}
datasource.password=${POSTGRES_PASSWORD:Frederik1}

# DEVELOPMENT URL
#datasource.jdbcUrl=${POSTGRES_URL:jdbc:postgresql://localhost:5432/float}
#datasource.username=${POSTGRES_USERNAME:float}
#datasource.password=${POSTGRES_PASSWORD:float}

datasource.connectionTimeout=${POSTGRES_CONNECTION_TIMEOUT:30000}
datasource.idleTimeout=${POSTGRES_IDLE_TIMEOUT:600000}
datasource.maxLifetime=${POSTGRES_MAX_LIFETIME:1800000}
datasource.minimumIdle=${POSTGRES_MINIMUM_IDLE:2}
datasource.maximumPoolSize=${POSTGRES_MAXIMUM_POOL_SIZE:5}
spring.liquibase.change-log=classpath:/liquibase/changelog-master.xml

# The property names corresponds directly to the HTTP header names, with one additional trick:
# Allow-Origin can be a comma-separated list rather than a single origin.
cors.Access-Control-Allow-Origin=${CORS_ALLOW_ORIGIN: http://localhost:4200, https://floatapp.azurewebsites.net}
cors.Access-Control-Allow-Methods=GET, PUT, POST, DELETE, HEAD, OPTIONS
cors.Access-Control-Allow-Headers=Authorization, Accept, Origin, Content-Type, Cache-Control
cors.Access-Control-Expose-Headers=Access-Control-Allow-Origin
cors.Access-Control-Max-Age=86400
