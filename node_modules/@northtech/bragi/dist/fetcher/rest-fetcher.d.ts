import { JsonFetcher } from './json-fetcher';
import { RequestRewriters } from './rewriting-fetcher';
import { JsonConverter } from '../json';
import { Observable } from 'rxjs';
export declare class RestFetcher<ItemT, ErrorT> extends JsonFetcher<ItemT, ErrorT> {
    readonly itemUrlTemplate: Observable<string>;
    readonly listUrlTemplate: Observable<string>;
    readonly GETRetryMillis: number;
    constructor(config: {
        requestRewriters?: RequestRewriters | undefined;
        jsonConverter?: JsonConverter<ItemT> | undefined;
        errorJsonConverter?: JsonConverter<ErrorT> | undefined;
        itemUrlTemplate: string | Observable<string>;
        listUrlTemplate: string | Observable<string>;
        GETRetryMillis?: number | undefined;
    });
    get(id: Partial<ItemT>): Observable<ItemT>;
    list(pathParams?: Record<string, any> | undefined | null, query?: string | {
        [key: string]: string | number | boolean | undefined | null;
    } | undefined | null): Observable<ItemT[]>;
    put(item: Partial<ItemT>): Observable<ItemT>;
    post(item: Partial<ItemT>): Observable<ItemT>;
    delete(id: Partial<ItemT>): Observable<never>;
}
