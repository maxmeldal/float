import { BehaviorSubject, Observable } from 'rxjs';
import { RestFetcher } from './rest-fetcher';
import { RequestRewriters } from './rewriting-fetcher';
import { JsonConverter } from '../json';
export declare class RestFetcherQueuedPut<ItemT, ErrorT> extends RestFetcher<ItemT, ErrorT> {
    #private;
    readonly queuedWrites: BehaviorSubject<number>;
    static readonly inflightUploads: BehaviorSubject<number>;
    readonly uploaded: Observable<ItemT>;
    constructor(config: {
        requestRewriters?: RequestRewriters | undefined;
        jsonConverter?: JsonConverter<ItemT> | undefined;
        errorJsonConverter?: JsonConverter<ErrorT> | undefined;
        itemUrlTemplate: string | Observable<string>;
        listUrlTemplate: string | Observable<string>;
        GETRetryMillis?: number | undefined;
        queuedPUTRetryMillis?: number | undefined;
    });
    queuePut(item?: Partial<ItemT> | undefined): void;
    private queueInternal;
    private doUpload;
    private tick;
    queuedItems(): ItemT[];
    private nextUploadKey;
    private keyToNumber;
}
